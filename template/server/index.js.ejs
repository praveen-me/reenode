const express = require('express');
const path = require('path');
const chalk = require('chalk');
const ip = require('ip');

const mode = process.env.NODE_ENV;
const webpackSetup = require('../build-utils/index');

const app = express();

if (mode === 'development') {
  app.use('/', express.static(__dirname));
  webpackSetup(app);
} else if (mode === 'production') {
  app.use('/', express.static('build'));
}

app.use('/', express.static(path.join(__dirname, './dist')));

app.set('view engine', 'ejs');

app.set('views', path.join(__dirname, './views'));

// Render index.ejs for all routes
app.get('*', (req, res) => res.render('index', { mode }));

const PORT = process.env.PORT || 3000;

app.listen(PORT, () => {
  console.log(`\nServer started ! ${chalk.green('âœ“')} \n`)
  console.log(chalk.bold('Access Urls:'));
  console.log(chalk.bold('-----------------------------------'));
  console.log(`Localhost: ${chalk.magenta(`http://localhost:${PORT}`)}`);
  console.log(`      Lan: ${chalk.magenta(`http://${ip.address()}:${PORT}`)}`);
  console.log(chalk.bold('-----------------------------------'));
  console.log(chalk.italic.red(`Press Ctrl/Cmd + C to stop.\n`));
});
